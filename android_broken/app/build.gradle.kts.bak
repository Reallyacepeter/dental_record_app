//plugins {
//    id("com.android.application")
//    id("org.jetbrains.kotlin.android")
//    // Flutter 플러그인은 Android/Kotlin 다음에 와야 함
//    id("dev.flutter.flutter-gradle-plugin")
//    // Firebase 쓰면 유지, 아니면 빼도 됨
//    id("com.google.gms.google-services")
//}
//
//android {
//    namespace = "com.example.dental_record_app"   // Manifest의 package와 동일하게
//    compileSdk = 35
//    // AGP 8.x는 보통 buildToolsVersion 명시 불필요 — 필요하면 남겨도 무방
//    // buildToolsVersion = "35.0.0"
//
//    defaultConfig {
//        applicationId = "com.example.dental_record_app"
//        minSdk = 23
//        targetSdk = 35
//
//        // Flutter 플러그인이 노출하는 버전 값을 그대로 사용
//        versionCode = flutter.versionCode
//        versionName = flutter.versionName
//
//        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
//        // 특별한 이유가 없으면 multidex는 비활성 유지(필요 시 true로 바꾸고 의존성 추가)
//        // multiDexEnabled = true
//    }
//
//    compileOptions {
//        sourceCompatibility = JavaVersion.VERSION_17
//        targetCompatibility = JavaVersion.VERSION_17
//    }
//    kotlinOptions {
//        jvmTarget = "17"
//    }
//
//    buildTypes {
//        release {
//            // 처음에는 축소 비활성(문제 생길 여지 줄이기)
//            isMinifyEnabled = false
//            isShrinkResources = false
//            proguardFiles(
//                getDefaultProguardFile("proguard-android-optimize.txt"),
//                "proguard-rules.pro"
//            )
//        }
//        debug {
//            isMinifyEnabled = false
//            isShrinkResources = false
//        }
//    }
//}
//
//flutter {
//    // Flutter 루트
//    source = "../.."
//}
//
//dependencies {
//    // ❌ Kotlin 표준 라이브러리 “버전 강제” 삭제 (충돌 원인)
//    // implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22")
//
//    // 안드로이드 네이티브 코드를 직접 쓰지 않으면 사실상 아무 것도 필요 없음.
//    // 필요할 때만 최소한으로 추가하세요.
//    implementation("androidx.core:core-ktx:1.12.0")
//
//    testImplementation("junit:junit:4.13.2")
//    androidTestImplementation("androidx.test.ext:junit:1.1.5")
//    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
//
//    // ⚠️ Jetpack Compose를 실제로 쓰지 않으면 아래들은 제거하세요.
//    // implementation(platform("androidx.compose:compose-bom:2023.03.00"))
//    // implementation("androidx.compose.ui:ui")
//    // implementation("androidx.compose.ui:ui-graphics")
//    // implementation("androidx.compose.ui:ui-tooling-preview")
//    // implementation("androidx.compose.material3:material3")
//    // debugImplementation("androidx.compose.ui:ui-tooling")
//    // debugImplementation("androidx.compose.ui:ui-test-manifest")
//    // androidTestImplementation(platform("androidx.compose:compose-bom:2023.03.00"))
//    // androidTestImplementation("androidx.compose.ui:ui-test-junit4")
//
//    // Firebase 네이티브 SDK를 직접 쓸 게 아니라면(Flutter 플러그인만 사용) 굳이 BOM/ktx 추가 안 해도 됩니다.
//    // implementation(platform("com.google.firebase:firebase-bom:33.7.0"))
//    // implementation("com.google.firebase:firebase-firestore-ktx")
//}

// android/app/build.gradle.kts

plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("dev.flutter.flutter-gradle-plugin")
    id("com.google.gms.google-services")
}

// Flutter 소스 루트 (필수)
flutter {
    source = "../.."
}

android {
    namespace = "com.example.dental_record_app"
    compileSdk = 35

    defaultConfig {
        applicationId = "com.example.dental_record_app"
        minSdk = flutter.minSdkVersion
        targetSdk = 35
        // Flutter 플러그인이 제공하는 버전 값 사용
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    // JDK 11 권장
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }

    // “Removing unused resources requires unused code shrinking…” 오류 방지:
    // shrinkResources는 release에서만, 그리고 minifyEnabled true일 때만 사용
    buildTypes {
        getByName("debug") {
            isMinifyEnabled = false
            isShrinkResources = false
        }
        getByName("release") {
            isMinifyEnabled = true
            isShrinkResources = true
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }

    // NDK, splits, signingConfig 등 쓰면 여기에 추가
}

dependencies {
    // Firebase BoM 등 필요 시 여기에 (선택)
    // implementation(platform("com.google.firebase:firebase-bom:33.6.0"))
}


